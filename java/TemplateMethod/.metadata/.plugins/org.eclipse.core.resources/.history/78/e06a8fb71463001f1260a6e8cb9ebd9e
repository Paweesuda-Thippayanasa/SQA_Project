package com.template.maven.example.gemini15pro.round1;
//AppointmentTest.java
import org.junit.jupiter.api.*;

import java.time.LocalDateTime;

import static org.junit.jupiter.api.Assertions.*;

class AppointmentTest {

 private static final String PATIENT_NAME = "John Doe";
 private static final String DOCTOR_NAME = "Dr. Smith";
 private static final AppointmentType APPOINTMENT_TYPE = AppointmentType.MONTHLY_CHECK_UP;
 private static final String MADE_BY = "Jane Doe";
 private static final String CLINIC_CONTACT_NUMBER = "123-456-7890";
 private static final LocalDateTime APPOINTMENT_DATE_TIME = LocalDateTime.of(2024, 3, 15, 10, 0);

 @Test
 void testScheduleAppointment() {
     Appointment appointment = new Appointment(PATIENT_NAME, DOCTOR_NAME, APPOINTMENT_TYPE, MADE_BY, CLINIC_CONTACT_NUMBER, APPOINTMENT_DATE_TIME) {
         @Override
         protected void setPatientName() {
             this.patientName = PATIENT_NAME;
         }

         @Override
         protected void setDoctorName() {
             this.doctorName = DOCTOR_NAME;
         }

         @Override
         protected void setAppointmentType() {
             this.appointmentType = APPOINTMENT_TYPE;
         }

         @Override
         protected void setMadeBy() {
             this.madeBy = MADE_BY;
         }

         @Override
         protected void setClinicContactNumber() {
             this.clinicContactNumber = CLINIC_CONTACT_NUMBER;
         }

         @Override
         protected void setAppointmentDateTime() {
             this.appointmentDateTime = APPOINTMENT_DATE_TIME;
         }

         @Override
         protected void addNotes() {
             this.notes = "Test notes";
         }
     }.scheduleAppointment();

     assertEquals(PATIENT_NAME, appointment.getPatientName());
     assertEquals(DOCTOR_NAME, appointment.getDoctorName());
     assertEquals(APPOINTMENT_TYPE, appointment.getAppointmentType());
     assertEquals(MADE_BY, appointment.getMadeBy());
     assertEquals(CLINIC_CONTACT_NUMBER, appointment.getClinicContactNumber());
     assertEquals(APPOINTMENT_DATE_TIME, appointment.getAppointmentDateTime());
     assertEquals("Test notes", appointment.getNotes());
 }

 @Test
 void testAllAppointmentTypes() {
     for (AppointmentType type : AppointmentType.values()) {
         Appointment appointment = new Appointment(PATIENT_NAME, DOCTOR_NAME, type, MADE_BY, CLINIC_CONTACT_NUMBER, APPOINTMENT_DATE_TIME) {
             @Override
             protected void setPatientName() {
                 this.patientName = PATIENT_NAME;
             }

             @Override
             protected void setDoctorName() {
                 this.doctorName = DOCTOR_NAME;
             }

             @Override
             protected void setAppointmentType() {
                 this.appointmentType = type;
             }

             @Override
             protected void setMadeBy() {
                 this.madeBy = MADE_BY;
             }

             @Override
             protected void setClinicContactNumber() {
                 this.clinicContactNumber = CLINIC_CONTACT_NUMBER;
             }

             @Override
             protected void setAppointmentDateTime() {
                 this.appointmentDateTime = APPOINTMENT_DATE_TIME;
             }
         }.scheduleAppointment();

         assertEquals(type, appointment.getAppointmentType());
     }
 }
}